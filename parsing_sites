import requests
from bs4 import BeautifulSoup
import csv
import re


#Получаем html страницы
def get_html(url):
    header = {'user-agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36'}
    r = requests.get(url, headers = header)
    if r.ok:
        return r.text
    print(r.status_code)

#Записуем в csv
def write_csv(data):
    with open('cmc.csv', 'a') as f:
        writer = csv.writer(f)
        writer.writerow( (data['name'],
                            data['symbol'],
                            data['price'],
                            data['link']))
        

#Извлекаем данные из Html
def get_page_data(html):
    soup = BeautifulSoup(html, 'lxml')
    
    trs = soup.find('table', id = 'currencies').find('tbody').find_all('tr')
    
    for tr in trs:
        tds = tr.find_all('td')
        
        try:
            name = tds[1].find('a', class_ = 'currency-name-container').text.strip()
        except:
            name = ''
            
        try:
            symbol = tds[1].find('a', class_ = 'link-secondary').text.strip()
        except:
            symbol = ''
        
        try:
            link = 'https://coinmarketcap.com'+ tds[1].find('a',class_ = 'currency-name-container').get('href')
        except:
            link = ''
            
        try:
            price = tds[3].find('a', class_ = 'price').get('data-usd').strip()
        except:
            price = ""
        
        
        data = {
            'name':name,
            'symbol':symbol,
            'link':link,
            'price':price
        }
     
        write_csv(data)
    



def main():
    url = 'https://coinmarketcap.com/ru/'


    while True:
        get_page_data(get_html(url))
        
        soup = BeautifulSoup(get_html(url), 'lxml')
        
        try:
            pattern = 'Следующий 100 →'
            url = 'https://coinmarketcap.com/ru/' + soup.find('ul', class_ = 'bottom-paginator').find('a', text = re.compile(pattern)).get('href')
        except:
            break
        


if __name__ == '__main__':
    main()
